[{"C:\\Users\\yllss\\OneDrive\\Skrivbord\\Websites\\FCC-Random-Quote-Machine\\rqm-react\\src\\index.js":"1","C:\\Users\\yllss\\OneDrive\\Skrivbord\\Websites\\FCC-Random-Quote-Machine\\rqm-react\\src\\components\\app.js":"2","C:\\Users\\yllss\\OneDrive\\Skrivbord\\Websites\\FCC-Random-Quote-Machine\\rqm-react\\src\\components\\quote.js":"3","C:\\Users\\yllss\\OneDrive\\Skrivbord\\Websites\\FCC-Random-Quote-Machine\\rqm-react\\src\\components\\buttons.js":"4"},{"size":245,"mtime":1610646235671,"results":"5","hashOfConfig":"6"},{"size":3072,"mtime":1611008156935,"results":"7","hashOfConfig":"6"},{"size":352,"mtime":1611004988240,"results":"8","hashOfConfig":"6"},{"size":579,"mtime":1611006625819,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"18o58mf",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"12"},"C:\\Users\\yllss\\OneDrive\\Skrivbord\\Websites\\FCC-Random-Quote-Machine\\rqm-react\\src\\index.js",[],["21","22"],"C:\\Users\\yllss\\OneDrive\\Skrivbord\\Websites\\FCC-Random-Quote-Machine\\rqm-react\\src\\components\\app.js",["23"],"// need to do\r\n// 1. ensure error catching in fetch function works\r\n\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport InnerQuoteBox from './quote';\r\nimport Buttons from './buttons';\r\n\r\nconst usePrevious = (value) => {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n};\r\n\r\nfunction App() {\r\n  const [allQuotes, setAllQuotes] = useState(null);\r\n  const [quote, setQuote] = useState(null);\r\n  const [author, setAuthor] = useState(null);\r\n  const [randomIdx, setRandomIdx] = useState(Math.floor(Math.random() * 1000));\r\n  const [themeIdx, setThemeIdx] = useState(Math.floor(Math.random() * 25));\r\n  const prevThemeIdx = usePrevious(themeIdx);\r\n  const [theme] = useState({\r\n    color: [\r\n      '#EF6F6C',\r\n      '#465775',\r\n      '#56E39F',\r\n      '#59C9A5',\r\n      '#5B6C5D',\r\n      '#E3170A',\r\n      '#F7B32B',\r\n      '#2D1E2F',\r\n      '#62929E',\r\n      '#C6C5B9',\r\n      '#CE7B91',\r\n      '#031926',\r\n      '#90BE6D',\r\n      '#EA9010',\r\n      '#63264A',\r\n      '#7161EF',\r\n      '#B79CED',\r\n      '#49111C',\r\n      '#BA5A31',\r\n      '#04A777',\r\n      '#30011E',\r\n      '#B68F40',\r\n      '#086375',\r\n      '#3C1642',\r\n      '#454ADE',\r\n    ],\r\n  });\r\n\r\n  const newRandomIdx = (arr) => {\r\n    if (arr === theme.color) {\r\n      setThemeIdx(Math.floor(Math.random() * arr.length));\r\n    } else {\r\n      setRandomIdx(Math.floor(Math.random() * arr.length));\r\n    }\r\n  };\r\n\r\n  const changeThemeColor = () => {\r\n    const elements = document.querySelectorAll('.themeElement');\r\n    newRandomIdx(theme.color);\r\n\r\n    if (prevThemeIdx === themeIdx) {\r\n      let index = themeIdx - 1;\r\n      if (index < 0) {\r\n        index = theme.color.length - 1;\r\n      }\r\n\r\n      elements.forEach((element) => {\r\n        element.style.backgroundColor = theme.color[index];\r\n      });\r\n      document.body.style.backgroundColor = theme.color[index];\r\n    } else {\r\n      elements.forEach((element) => {\r\n        element.style.backgroundColor = theme.color[themeIdx];\r\n      });\r\n      document.body.style.backgroundColor = theme.color[themeIdx];\r\n    }\r\n  };\r\n\r\n  function fetchQuote() {\r\n    fetch('https://type.fit/api/quotes')\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw Error('Unable to fetch the data');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setAllQuotes(data);\r\n        newRandomIdx(data);\r\n        setQuote(data[randomIdx].text);\r\n        setAuthor(data[randomIdx].author);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  const updateQuoteBox = () => {\r\n    newRandomIdx(allQuotes);\r\n    setQuote(allQuotes[randomIdx].text);\r\n    setAuthor(allQuotes[randomIdx].author);\r\n    changeThemeColor();\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchQuote();\r\n    changeThemeColor();\r\n  }, []);\r\n\r\n  return (\r\n    <main id='quote-box'>\r\n      {allQuotes && <InnerQuoteBox quote={quote} author={author} />}\r\n      <Buttons quote={quote} updateQuoteBox={updateQuoteBox} />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\yllss\\OneDrive\\Skrivbord\\Websites\\FCC-Random-Quote-Machine\\rqm-react\\src\\components\\quote.js",[],"C:\\Users\\yllss\\OneDrive\\Skrivbord\\Websites\\FCC-Random-Quote-Machine\\rqm-react\\src\\components\\buttons.js",["24"],"import React from 'react';\r\n\r\nfunction Buttons({ quote, updateQuoteBox }) {\r\n  return (\r\n    <div className='buttons'>\r\n      <button className='themeElement' id='new-quote' onClick={updateQuoteBox}>\r\n        New quote\r\n      </button>\r\n      <a\r\n        className='themeElement'\r\n        href={`https://twitter.com/intent/tweet?text=So%20inspiring%21${` \"${quote}\"`}&hashtags=randomQuoteMachine%2C100DaysOfCode`}\r\n        id='tweet-quote'\r\n        target='_blank'\r\n      >\r\n        <i className='fab fa-twitter'></i>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Buttons;\r\n",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":112,"column":6,"nodeType":"31","endLine":112,"endColumn":8,"suggestions":"32"},{"ruleId":"33","severity":1,"message":"34","line":9,"column":7,"nodeType":"35","endLine":14,"endColumn":8},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'changeThemeColor' and 'fetchQuote'. Either include them or remove the dependency array.","ArrayExpression",["38"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"39","fix":"40"},"Update the dependencies array to be: [changeThemeColor, fetchQuote]",{"range":"41","text":"42"},[2845,2847],"[changeThemeColor, fetchQuote]"]